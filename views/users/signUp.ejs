<%- include('../layouts/emptyHeader.ejs')-%>
    <!-- Header Start -->
    <!-- Header End -->
    <div class="center-div py-5 col-md-12 col-12">
        <div class="container w-50 pt-5 pb-5 border border-dark">
            <h1 class="fs-3 text-black text-center">Sign Up</h1>
            <div class="text-center text-center">
                <%=locals.emailExistMessage?emailExistMessage:''%> 
            </div>
            <form action="/signup" method="post" id="submit-form">
                <div class="row justify-content-center py-4 ps-4 pe-4">
                    <div class="col-md-6 col-12">
                        <!-- First Name Field -->
                        <div class="mb-3">
                            <label for="firstname-input" class="form-label">First Name *</label>
                            <input type="text" class="rounded-0 form-control" name="fname" id="fname-input">
                        </div>
                        <!-- Email Field -->
                        <div class="mb-3">
                            <label for="email-input" class="form-label">Email *</label>
                            <input type="email" class="rounded-0 form-control" name="email" id="email-input">
                        </div>
                        <!-- Password Field -->
                        <div class="mb-3 position-relative align-items-center">
                            <label for="password-input" class="form-label">Enter Password *</label>
                            <input type="password" class="rounded-0 form-control" name="password" id="password-input">
                            <i class="bi bi-eye-slash-fill position-absolute end-0 translate-middle-y end-0 pe-3 eye-icon"
                                id="password-toggle"></i>
                        </div>
                    </div>
                    <div class="col-md-6 col-12">
                        <!-- Last Name Field -->
                        <div class="mb-3">
                            <label for="lastname-input" class="form-label">Last Name *</label>
                            <input type="text" class="rounded-0 form-control" name="lname" id="lname-input">
                        </div>
                        <!-- Mobile No Field -->
                        <div class="mb-3">
                            <label for="mobno-input" class="form-label">Mobile No *</label>
                            <input type="text" class="rounded-0 form-control" name="mobno" id="mobno-input">
                        </div>
                        <!-- Confirm Password Field -->
                        <div class="mb-3">
                            <label for="confirm-password-input" class="form-label">Confirm Password *</label>
                            <input type="password" class="rounded-0 form-control" name="confirmPassword"
                                id="confirmpassword-input">
                        </div>
                    </div>
                    <div class="text-danger text-center" id="message-error"></div>
                    <!-- <div class="mb-3 text-center w-50">
                        <label for="referral-input" class="form-label">Referral Code</label>
                        <input type="referral" id="referral" class="rounded-0 form-control" placeholder="Referral Code(Optional)" name="referral">
                        <small id="referralErr" class="error"></small>
                    </div> -->
                </div>
                <div class="text-center">
                    <button type="submit" class="rounded-0 btn btn-dark w-50">Sign Up</button>
                    <br>
                    <span class="login-text">Already have an account? </span><a href="/login" class="login-text">Sign
                        here</a>
                </div>
            </form>
        </div>
    </div>
    <script>
        /** Form Validation Start **/
        const form = document.getElementById('submit-form');
        const fName = document.getElementById('fname-input');
        const lName = document.getElementById('lname-input');
        const emailId = document.getElementById('email-input');
        const mobNo = document.getElementById('mobno-input');
        const password = document.getElementById('password-input');
        const confirmPassword = document.getElementById('confirmpassword-input');
        form.addEventListener('submit', e => {
            e.preventDefault();
            validateInput();
        });
        const setError = (element, message) => {
            const inputControl = element.parentElement;
            // const errorDisplay = inputControl.querySelector('.error');
            // errorDisplay.innerText=message;
            element.placeholder = message;
            fName.style.border = '1.5px solid red';
            lName.style.border = '1.5px solid red';
            emailId.style.border = '1.5px solid red';
            mobNo.style.border = '1.5px solid red';
            password.style.border = '1.5px solid red';
            confirmPassword.style.border = '1.5px solid red';
            inputControl.classList.add('error');
            inputControl.classList.remove('success');
        };
        const setSuccess = element => {
            const inputControl = element.parentElement;
            // const errorDisplay= inputControl.querySelector('.error');
            // errorDisplay.innerText='';
            element.placeholder = '';
            inputControl.classList.add('success');
            inputControl.classList.remove('error');
        };
        const isValidFName = fName => {
            const rename = /^[a-zA-Z]/;
            return rename.test(String(fName));
        };
        const isValidLName = lName => {
            const rename = /^[a-zA-Z]/;
            return rename.test(String(lName));
        };
        const isValidEmail = emailId => {
            const re = /^[a-zA-Z0-9+_.-]+@[a-zA-Z0-9.-]+$/;
            return re.test(String(emailId).toLowerCase());
        };
        const isValidMobNo = mobNo => {
            const re = /^[0-9]{10}$/;
            return re.test(mobNo);
        };
        const isValidPassword = password => {
            // Regular expression to validate password
            // The password must contain at least 8 characters, including at least one uppercase letter, one lowercase letter, and one digit.
            const re = /^[a-zA-Z\d_@-]{8,}$/;
            return re.test(password);
        };
        const isValidConfirmPassword = confirmPassword => {
            return confirmPassword === isValidPassword;
        }
        const validateInput = () => {
            console.log("Entered to validate input");
            const firstNameValue = fName.value.trim();
            const lastNameValue = lName.value.trim();
            const emailIdValue = emailId.value.trim();
            const mobNoValue = mobNo.value.trim();
            const passwordValue = document.getElementById('password-input').value.trim();
            const confirmPasswordValue = document.getElementById('confirmpassword-input').value.trim();
            if (firstNameValue === '') {
                setError(fName, 'First Name is required');
            } else if (!isValidFName(firstNameValue)) {
                //setError(username);
                document.getElementById('message-error').innerHTML = 'Names should be alphabets';
            } else {
                console.log("fName Ok");
                setSuccess(fName);
            }
            if (lastNameValue === '') {
                setError(lName, 'Last Name is required');
            } else if (!isValidLName(lastNameValue)) {
                //setError(username);
                document.getElementById('message-error').innerHTML = 'Names should be alphabets';
            } else {
                console.log("lName Ok");
                setSuccess(lName);
            }
            if (emailIdValue === '') {
                setError(emailId, 'Email is required');
            } else if (!isValidEmail(emailIdValue)) {
                //alert('Provide a valid Email address')
                document.getElementById('message-error').innerHTML = 'Provide a valid email address';
            } else {
                console.log("email Ok");
                setSuccess(emailId);
            }
            if (mobNoValue === '') {
                setError(mobNo, 'Mobile No is required');
            } else if (!isValidMobNo(mobNoValue)) {
                //alert('Provide a valid Email address')
                document.getElementById('message-error').innerHTML = 'Provide a valid mobile number';
            } else {
                console.log("Mobile oK")
                setSuccess(mobNo);
            }
            if (passwordValue === '') {
                setError(password, 'Password is required');
            } else if (!isValidPassword(passwordValue)) {
                //alert('Provide a valid Email address')
                document.getElementById('message-error').innerHTML = 'Provide a strong password';
                //setError(password,'Provide a strong password');
            } else {
                console.log("Password Ok")
                setSuccess(password);
            }
            if (confirmPasswordValue === '') {
                setError(confirmPassword, 'Confirm Password is required');
            } else if (confirmPasswordValue !== passwordValue) {
                document.getElementById('message-error').innerHTML = 'Passwords do not match';
            } else {
                console.log("confirm Password ok");
                setSuccess(confirmPassword);
            }
            //FOR SUBMISSION:
            const inputs = [fName, lName, emailId, mobNo, password, confirmPassword];
            if (inputs.every(input => input.parentElement.classList.contains('success'))) {
                form.submit();
                console.log("Form submission successful")
            }
        };
        /** Form Validation End **/
        /** Password Seeker Start **/
        const togglePassword = document.querySelector('#password-toggle');
        const passwordInput = document.querySelector('#password-input');
        togglePassword.addEventListener('click', function () {
            const type = passwordInput.getAttribute('type') === 'password' ? 'text' : 'password';
            passwordInput.setAttribute('type', type);
            this.classList.toggle('bi-eye-fill');
            this.classList.toggle('bi-eye-slash-fill');
        });
        /** Password Seeker End **/
    </script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.8/dist/umd/popper.min.js"
        integrity="sha384-I7E8VVD/ismYTF4hNIPjVp/Zjvgyol6VFvRkX/vR+Vc4jQkC+hVqc2pM8ODewa9r"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"
        integrity="sha384-fbbOQedDUMZZ5KreZpsbe1LCZPVmfTnH7ois6mU1QK+m14rQ1l2bGBq41eYeM/fS"
        crossorigin="anonymous"></script>
    </body>
    </html>